version: '3'

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - server
    volumes:
      - ./client:/app
      - /app/node_modules
      - client-cache:/app/node_modules/.cache
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:5000
    user: "1000:1000"

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postreact
      - JWT_SECRET=d7e558ada6d1b9a5c95c62b6de0a5f8c4b6a4c0e2d8f3b7a9c1e5d8f2b4a6c8
      - NODE_ENV=development
      - PORT=5000
    volumes:
      - ./server:/app
      - /app/node_modules

  db:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postreact
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  client-cache:
